(define-module (rc packages nix)
  #:use-module (guix gexp)
  #:use-module (guix packages)
  #:use-module (guix download)
  #:use-module (guix git-download)
  #:use-module ((guix licenses) #:prefix license:)
  #:use-module (guix build-system gnu)
  #:use-module (gnu packages autotools)
  #:use-module (gnu packages backup)
  #:use-module (gnu packages bison)
  #:use-module (gnu packages flex)
  #:use-module (gnu packages linux)
  #:use-module (gnu packages package-management)
  #:use-module (gnu packages web)
  #:export (nixUnstable))

(define libcpuid
  (package
    (name "libcpuid")
    (version "0.5.1")
    (source
      (origin
        (method git-fetch)
        (uri (git-reference
               (url "https://github.com/anrieff/libcpuid.git")
               (commit (string-append "v" version))))
        (sha256
          (base64
            "m10LdtwBk1Lx31AJ4HixEYaCkT7EHpF9+tOV1rSA6VU="))
        (patches
          (list (plain-file "stdint.patch"
                            "\
--- a/libcpuid/libcpuid.h
+++ b/libcpuid/libcpuid.h
@@ -88 +88 @@
-#include "libcpuid_types.h"
+#include <stdint.h>
                            ")))))
    (native-inputs
      `(("autoconf" ,autoconf)
        ("automake" ,automake)
        ("libtool" ,libtool)))
    (build-system gnu-build-system)
    (description "A small C library for x86 CPU detection and feature extraction")
    (synopsis "A small C library for x86 CPU detection and feature extraction")
    (home-page "http://libcpuid.sourceforge.net/")
    (license license:bsd-2)))

(define nixUnstable
  (package
    (inherit nix)
    (name "nix")
    (version "2.4pre")
    (source
      (origin
        (method git-fetch)
        (uri (git-reference
               (url "https://github.com/nixos/nix.git")
               (commit "5985b8b5275605ddd5e92e2f0a7a9f494ac6e35d")))
        (sha256
          (base64
            "2So7ZsD8QJlOXCYqdoj8naNgBw6O4Vw1MM2ORsaqlXc="))))
    (inputs
      (cons*
        `("libcpuid" ,libcpuid)
        `("libarchive" ,libarchive)
        (package-inputs nix)))
    (native-inputs
      (cons*
        `("autoconf" ,autoconf)
        `("autoconf-archive" ,autoconf-archive)
        `("automake" ,automake)
       ;`("m4" ,m4)
        `("bison" ,bison)
        `("flex" ,flex)
       ;`("mdbook" ,mdbook)
        `("jq" ,jq)
       ;(lib.getBin lowdown)
        (package-native-inputs nix)))))
